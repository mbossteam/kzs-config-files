server:
  port: 42550

logging:
  level:
    root: INFO
    org:
      springframework:
        web: ERROR
      hibernate: ERROR
      
keycloak-client:
  server-url: http://35.198.54.93:8090/auth
  realm:  mboss-realm

spring:
  application:
    name: core-service

  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: mboss-client
            authorization-grant-type: authorization_code
            redirect-uri: http://35.198.54.93:${server.port}/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs

  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://35.198.54.93:5432/dbcore
    username: 
    password: postgres
  # JPA properties
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: dbcore
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true

eureka:
  instance:
    hostname: 35.198.54.93
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
  client:
    serviceUrl:
      defaultZone: http://${GIT_USER}:${GIT_PASS}@${eureka.instance.hostname}:8761/eureka
    register-with-eureka: true
    fetch-registry: true

management:
  endpoint:
    health:
      show-details: always