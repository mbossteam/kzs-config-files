server:
  port: ${PORT:0}

logging:
  level:
    root: INFO
    org:
      springframework:
        web: ERROR
      hibernate: ERROR
      
keycloak-client:
  server-url: http://35.198.54.93:8090/auth
  realm:  mboss-realm

spring:
  application:
    name: core-service

  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: mboss-client
            #client-secret: 4a9401ad-bcea-4cbd-9ee0-33177eb8e808
            authorization-grant-type: authorization_code
            redirect-uri: http://35.198.54.93:8090/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  
  jpa:
    database-plataform: org.hibernate.dialect.H2Dialect
    hibernate.ddl-auto: update

  h2:
    console:
      enable: true
      path: /h2-console

eureka:
  instance:
    hostname: 35.198.54.93
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka
    register-with-eureka: true
    fetch-registry: true
